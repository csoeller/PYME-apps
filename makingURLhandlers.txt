to allow handling of custom URLs on OS X we need to make a specially crafted App and
edit its Info.plist file, as below to add handling of the pyme: URL type:

	<key>CFBundleIdentifier</key>
	<string>com.pyme.AppleScript.pyme</string>
	<key>CFBundleURLTypes</key>
	<array>
	  <dict>
	    <key>CFBundleURLName</key>
	    <string>Pyme</string>
	    <key>CFBundleURLSchemes</key>
	    <array>
	      <string>pyme</string>
	    </array>
	  </dict>
	</array>

The app is most easily made by using apple scripting, the PYME url opener simply calls a bash script that invokes the appropriate python file, passes the URL and sets required environment variables:

on open location this_URL
	do shell script "/bin/bash /Users/csoelle/Documents/src/PYMEapps/pyme-urlopen.sh '" & this_URL & "'"
end open location


the pyme-urlopen.sh scripts is simply:

#!/bin/bash
export PATH="/Library/Frameworks/Python.framework/Versions/Current/bin:${PATH}"
export PYMENASPATH=/mnt/smb/nas2/
PYTHONPATH=/Users/csoelle/Documents/src/PYME-nf/ urlOpener.py $*


A nicer way is to embed the shell script into the app:

red_menace
Re: Can I embed a full shell script inside an applescript?
May 21, 2012 7:28 AM (in response to aarons510)
You would create a script application something like:
 
set theCommand to POSIX path of (path to resource "myShellScript")
set theResult to (do shell script theCommand)
theResult --> standard output from the shell script, if any

Then place myShellScript (or whatever the name of your executable file is) in the Contents/Resources folder of the application bundle (right click on an application and "Show Package Contents" to open the bundle).  The do shell script command always calls bash - see Technical Note TN2065 for more information.
